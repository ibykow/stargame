Milestones
  √ player cash
  √ ship fuel
  √ gas stations with price per liter
  √ gas purchase button
  - simple mission (delivery)

Interaction:
  - fly through/shoot selection options instead of using the mouse
    (eg. accept missions by flying through an orb next to the star)
  - basic menu
      - show nearest gas station (only if known?)
      - show nearest distressed star
      - show nearest player (costs money?)

View
 - star info pane
 - mini-map with points of interest
 - tweened animation for pop-ups etc
 - clean up HUD

Gameplay
 - star names
 √ ship fuel
 √ player cash
 √ gas stations (eg 1 in 100 stars)
    √ generating
    √ purchase fuel
 - trophies/achievements
 - upgrades for everything (gun type, fuel, cargo capacity, etc.)
 - ship distress signal (eg. when out of fuel, for fun)
 - collect bounties on fugitives (eg. attract pirates via distress signal)

Missions
  - introduction/delivery:
    origin: any start
    go to destination
    click/fly through target
    come back to origin
  - distress signal:
    respond to a star's distress signal
    possible outcomes:
      trap
      salvage
      mission option
      assist (eg. give gas)

Engine
  √ range checking for certain actions (eg. must be near star to buy fuel)
  √ add message/notification system
  - add Font object which describes fonts, color, line height, char width, etc.
  √ fix bullet-collisions
  - add more ship gears/speeds: craw, normal, fast, turbo
  - add hyperspace/jump to location option (for price)
  - add ai/bots (pirates, friendlies, roadside/spaceside)
  - add ship auto-pilot (pruchasable)
  - add a scripting language for missions
    describes star conditions, pass/fail outcomes/rewards, mission flow, etc

Player Objective
  description: string
  pass: function
  fail: function
  cleanup: function # remove event listeners
  events:
    pass: []
    fail: []

Mission System
  √ register initial event listeners
  - missions are event driven
  - missions can create sprites
  - create mission
      start requirements (min players, min)
      players

Event System
  √ register listeners
  √ emit events
  √ add timeout events
  - add event dependencies (has event occurred since I started listening? etc.)

Events
  √ timeout
  √ player:
      action (forward, left, right, brake, fire)
      death

Player Events
  - join
  - leave
  - die
  √ move
  √ no fuel
  √ re-fuel
  - no cash
  - mission success
  - mission fail
  √ timeout

Bugs
  √ life at 1000 on fuel purchase
  √ server-side fuel purchase
  √ re-associate client-side bullets with their originators (ship/gun)
  - dead ship doesn't disappear if their canvas is paused
  √ move gas station icon above star
  √ pager sequence (refuel update in between brake strings)
  - ring buffer map overflow (try map instead of toArray in pager brake strings)
